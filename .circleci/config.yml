version: 2.1

parameters:
  run:
    type: boolean
    default: false
  all:
    type: boolean
    default: false
  all_second:
    type: boolean
    default: false
  force:
    type: boolean
    default: false

commands:
  ping_service:
    steps:
      - run:
          name: Ping service
          command: |
            if [[ -z "$WHATSON_API_URL" ]]; then
              echo "Error: WHATSON_API_URL environment variable is not set."
              exit 1
            fi

            echo "Calling: $WHATSON_API_URL"

            if ! curl -sf "$WHATSON_API_URL" > /dev/null; then
              echo "Error: Failed to reach $WHATSON_API_URL"
              exit 1
            fi

            echo "Service ping successful."
  setup_env:
    steps:
      - checkout
      - run:
          name: Install npm globally
          command: sudo npm install -g npm@9.8.0
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Install vercel globally
          command: sudo npm install -g vercel
  run_tests:
    steps:
      - run:
          name: Run tests
          command: npm run test-remote
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
            JEST_JUNIT_ADD_FILE_ATTRIBUTE: "true"
      - store_test_results:
          path: ./reports/

jobs:
  build:
    docker:
      - image: cimg/node:20.5.1
    steps:
      - ping_service
      - setup_env
      - run:
          name: Update movie data
          command: node src/updateData.js movie update_ids update_db
      - run:
          name: Update tvshow data first batch
          command: node src/updateData.js tvshow update_ids update_db circleci active no_check_db_ids 0 no_check_data no_force mojo no_skip_services no_delete_ids 0 101
      - run:
          name: Update tvshow data second batch
          command: node src/updateData.js tvshow no_update_ids update_db circleci active no_check_db_ids 100 no_check_data no_force mojo no_skip_services no_delete_ids 0 201
      - run:
          name: Update tvshow data third batch
          command: node src/updateData.js tvshow no_update_ids update_db circleci active no_check_db_ids 200 no_check_data no_force mojo no_skip_services no_delete_ids 0 301
      - run_tests
  build_all:
    docker:
      - image: cimg/node:20.5.1
    parallelism: 30
    steps:
      - ping_service
      - setup_env
      - run:
          name: Update all movie data first half
          command: npm run update-movie-data-first-half
  build_all_second:
    docker:
      - image: cimg/node:20.5.1
    parallelism: 30
    steps:
      - ping_service
      - setup_env
      - run:
          name: Update all movie data second half
          command: npm run update-movie-data-second-half
      - run:
          name: Update all tvshow data all
          command: npm run update-tvshow-data-all
  force:
    docker:
      - image: cimg/node:20.5.1
    steps:
      - ping_service
      - setup_env
      - run:
          name: Force update movie data
          command: node src/updateData.js movie update_ids update_db circleci active no_check_db_ids 0 no_check_data force
      - run:
          name: Force update tvshow data first batch
          command: node src/updateData.js tvshow update_ids update_db circleci active no_check_db_ids 0 no_check_data force mojo no_skip_services no_delete_ids 0 101
      - run:
          name: Force update tvshow data second batch
          command: node src/updateData.js tvshow no_update_ids update_db circleci active no_check_db_ids 100 no_check_data force mojo no_skip_services no_delete_ids 0 201
      - run:
          name: Force update tvshow data third batch
          command: node src/updateData.js tvshow no_update_ids update_db circleci active no_check_db_ids 200 no_check_data force mojo no_skip_services no_delete_ids 0 301
      - run_tests

workflows:
  build:
    when: << pipeline.parameters.run >>
    jobs:
      - build
  build_all:
    when: << pipeline.parameters.all >>
    jobs:
      - build_all
  build_all_second:
    when: << pipeline.parameters.all_second >>
    jobs:
      - build_all_second
  force:
    when: << pipeline.parameters.force >>
    jobs:
      - force
